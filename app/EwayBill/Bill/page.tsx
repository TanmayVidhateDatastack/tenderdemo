import Application from "@/app/Elements/ElProComponents/ApplicationComponents/Application";
import pagestyles from "../../page.module.css";
import styles from "../bill.module.css";
import DsTableComponent from "@/app/Elements/Components/DsTablecomponent/DsTableComponent";
import TextField from "@/app/Elements/Components/DsTextField/DsTextField";
// import TableComponent from "@/app/Components/DsTablecomponent/DsTableComponent";
// import DsTableComponent from "@/app/Components/DsTablecomponent/DsTableComponent";
const tempTableData = {
  className: "sample-table",
  id: "table-1",
  columns: [
    {
      columnIndex: 0,
      className: "header-column",
      columnHeader: "Mode",
      isHidden: false,
      sort: "ASC",
      columnContentType: "number",
    },
    {
      columnIndex: 1,
      className: "header-column",
      columnHeader: "Vehicle / Trans Doc No & Dt.",
      isHidden: false,
      sort: "ASC",
      columnContentType: "date",
    },
    {
      columnIndex: 2,
      className: "header-column",
      columnHeader: "From",
      isHidden: false,
      sort: "ASC",
      columnContentType: "number",
    },
    {
      columnIndex: 3,
      className: "header-column",
      columnHeader: "Entered Date",
      isHidden: false,
      sort: "ASC",
      columnContentType: "number",
    },
    {
      columnIndex: 4,
      className: "header-column",
      columnHeader: "Entered By",
      isHidden: false,
      sort: "ASC",
      columnContentType: "number",
    },
    {
      columnIndex: 5,
      className: "header-column",
      columnHeader: "CEWB No. (If any)",
      isHidden: false,
      sort: "ASC",
      columnContentType: "number",
    },
    {
      columnIndex: 6,
      className: "header-column",
      columnHeader: "Multi Veh.info (if any)",
      isHidden: false,
      sort: "ASC",
      columnContentType: "number",
    },
  ],
  rows: [
    {
      rowIndex: 0,
      className: "row",
      content: [
        {
          columnIndex: 0,
          className: "cell",
          content: <TextField></TextField>,
          contentType: "number",
        },
        {
          columnIndex: 1,
          className: "cell",
          content: "DL01LN4650",
          contentType: "date",
        },
        {
          columnIndex: 2,
          className: "cell",
          content: "NEW DELHI",
          contentType: "string",
        },
        {
          columnIndex: 3,
          className: "cell",
          content: "06/09/2024 01:09 PM ",
          contentType: "string",
        },

        {
          columnIndex: 4,
          className: "cell",
          content: "07AACPR8055Q1ZY",
          contentType: "string",
        },
        {
          columnIndex: 5,
          className: "cell",
          content: " 7245683175",
          contentType: "string",
        },
        {
          columnIndex: 6,
          className: "cell",
          content: "-",
          contentType: "string",
        },
      ],
    },
  ],
};

const eWayBillData = {
  title: "e-way bill",
  qrCode: "",
  fieldA: [
    { label: "E-Way Bill", value: "791456290430" },
    { label: "E-Way Bill Date", value: "06/09/24 01:09PM" },
    {
      label: "Generated By",
      value: "07AAA CI122 0M2ZU - IPCA LABORATORIES LTD.",
    },
    { label: "Valid From", value: "06/09/2024 01:09 PM [6Kms]" },
    { label: "Valid Until", value: "07/09/2024" },
    { label: "IRN", value: "a1b2c3d4e5f67890abcdef1234567890abcdef1234567890" },
  ],
  fieldB: [
    {
      label: "GSTIN of Supplier",
      value: "07AAA C1122 OM2ZU - IPCA LABORATORIES LTD",
    },
    { label: "Place of Dispatch", value: "NEW DELHI, DELHI-110015" },
    { label: "GSTIN of Dispatch", value: "07AAJ PA873 1D1Z0, NOVOPHARM" },
    { label: "Place of Delivery", value: "NEW DELHI, DELHI-110028" },
    { label: "Document No.", value: "108LS4003435" },
    { label: "Transaction Type", value: "Regular" },
    { label: "Value of Goods", value: "16419.9" },
    { label: "HSN Code", value: "30049042-FOLITRAX TAB (10)+1" },
    { label: "Reason of Transportation", value: "OutWard-supplier" },
    { label: "Transporter", value: "077AAAAAA" },
  ],

  partA: [{ title: "Part - A" }],
  partB: [{ title: "Part - B" }],
  Note: [
    {
      title:
        "Note*: if any descrepancy in information please try after some time.",
    },
  ],
};
const EWayBillComponent = () => {
  return (
    <Application appTitle={"E-way Bill"} hasPrevious={true}>
      <div className={pagestyles.container}>
        <div className={styles.outerContainer}>
          <div className={styles.headerContainer}>
            <h2>{eWayBillData.title}</h2>
            <div className={styles.qrCode}></div>
          </div>

          <div className={styles.contentContainer}>
            <div className={styles.table}>
              {eWayBillData.fieldA.map((fieldA, index) => (
                <div key={index} className={styles.row}>
                  <div className={styles.cell}>
                    <div className={styles.column}>
                      <p>{fieldA.label}:</p>
                    </div>
                  </div>
                  <div className={styles.cell}>
                    <div className={styles.column}>
                      <strong>{fieldA.value}</strong>
                    </div>
                  </div>
                </div>
              ))}

              {eWayBillData.partA.map((partA, index) => (
                <div key={index} className={styles.row}>
                  <div className={styles.cell}>
                    <div className={styles.column}>
                      <strong>{partA.title}</strong>
                    </div>
                  </div>
                </div>
              ))}

              {eWayBillData.fieldA.map((fieldB, index) => (
                <div key={index} className={styles.row}>
                  <div className={styles.cell}>
                    <div className={styles.column}>
                      <p>{fieldB.label}:</p>
                    </div>
                  </div>
                  <div className={styles.cell}>
                    <div className={styles.column}>
                      <strong>{fieldB.value}</strong>
                    </div>
                  </div>
                </div>
              ))}

              {eWayBillData.partB.map((partB, index) => (
                <div key={index} className={styles.row}>
                  <div className={styles.cell}>
                    <div className={styles.column}>
                      <strong>{partB.title}</strong>
                    </div>
                  </div>
                </div>
              ))}
              <div className={styles.row}>
                <div className={styles.cell}>
                  <div className={styles.column}>
                    {/* <div className={styles.celloBelow}> */}
                    <DsTableComponent
                      className={tempTableData.className}
                      id={tempTableData.id}
                      columns={tempTableData.columns}
                      rows={tempTableData.rows}
                      hasSearch={false}
                      alignment={"center"}
                      isSortable={false}
                      isFooterRequired={false}
                    ></DsTableComponent>
                    <div className={styles.scanner}></div>
                  </div>
                </div>
              </div>

              {eWayBillData.partB.map((partB, index) => (
                <div key={index} className={styles.row}>
                  <div className={styles.cell}>
                    <div className={styles.column}>
                      <strong>{partB.title}</strong>
                    </div>
                  </div>
                </div>
              ))}

              <div></div>
            </div>
          </div>
        </div>
      </div>
    </Application>
  );
};
export default EWayBillComponent;
